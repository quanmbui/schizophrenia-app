{
    "collab_server" : "",
    "contents" : "#Final  Project\n#Mental Health Group\n\n#Load ggplot2 library\nlibrary(shiny)\nlibrary(ggplot2)\nlibrary(lme4)\nlibrary(arm)\n\nshinyServer(function(input,output){\n  \n  #Load Dataset\n  panss.data <- read.csv(\"panss-data.csv\", stringsAsFactors=FALSE)\n  panss.data <- as.data.frame(panss.data)\n  patient.list<-unique(panss.data$id)\n  \n  #Overview of study participants - pie chart for sex\n  \n  output$sexpie <- renderPlot({\n    sex_table <- as.data.frame(cbind(id = panss.data$id, sex = panss.data$sex))\n    sex_table <- sex_table[!duplicated(sex_table$id),]\n    sex_table <- na.omit(sex_table)\n\n    sexpie = sex_table$sex\n    sex.freq = table(sex_table$sex)\n    piecolors = c(\"pink\", \"lightblue\")\n    piepercent <- round(100*sex.freq/sum(sex.freq),1)\n    pie(sex.freq, labels = c(\"Female\", \"Male\"), col = piecolors, \n        main = \"Sex Distribution of Study Participants\", cex = 1.0)\n    })\n  \n  #Overview of study participants - pie chart for race\n  \n  output$racepie <- renderPlot({\n    race_table <- as.data.frame(cbind(id = panss.data$id, race = panss.data$race))\n    race_table <- race_table[!duplicated(race_table$id),]\n    race_table <- na.omit(race_table)\n    \n    racepie = race_table$race\n    race.freq = table(race_table$race)\n    pielabels = c(\"American Indian\", \"Black\", \"Hispanic\", \"Oriental\", \"Polynesian/East Asian\", \"White\")\n    pie(race.freq, labels=pielabels, main = \"Race Distribution of Study Participants\", cex = 1.0)\n  })\n\n  \n  #Univariate Visualization of Onset Age\n  \n  output$onsetageplot <- renderPlot({\n    \n    onsetagedf <- as.data.frame(cbind(id = panss.data$id, onset = panss.data$onsetage))\n    onsetagedf <- onsetagedf[!duplicated(onsetagedf$id),]\n    onsetagedf <- na.omit(onsetagedf)\n    \n    onset.hist <- hist(onsetagedf$onset, breaks=seq(0,250,5), plot = FALSE)\n    \n    h <- hist(onsetagedf$onset)\n    h$density = h$counts/sum(h$counts)*100\n    plot(h, xlab=\"Age at Symptom Onset in Years\", ylab=\"Percentage of Patients\",\n       main=\"Age at Symptom Onset (523 Patients)\", xlim=c(0,45), freq=FALSE, \n       col=ifelse(onset.hist$breaks < input$age, \"#adebad\", \"forestgreen\"))\n    OnsetAgeinput <-  panss.data$onsetage[which(panss.data$onsetage == input$age)]\n  \n      })\n  \n  \n  #Univariate Visualization of firsthospage\n  output$firsthospageplot <- renderPlot({\n    \n    firsthopdf <- as.data.frame(cbind(id = panss.data$id, firsthop = panss.data$firsthospage))\n    firsthopdf <- firsthopdf[!duplicated(firsthopdf$id),]\n    firsthopdf <- na.omit(firsthopdf)\n    \n    firsthosp.hist <- hist(firsthopdf$firsthop, breaks=seq(0,200,5), plot = FALSE)\n    \n    h <- hist(firsthopdf$firsthop)\n    h$density = h$counts/sum(h$counts)*100\n    plot(h, xlab=\"Age at Symptom Onset in Years\", ylab=\"Percentage of Patients\",\n         main=\"Age at First Hospitalization (523 Patients)\", xlim=c(0,60), freq=FALSE,\n    col=ifelse(firsthosp.hist$breaks < input$age,\"#ffc0b6\", \"#ff5336\"))\n    Firsthospageinput <-  panss.data$firsthospage[which(panss.data$firsthospage == input$age)]\n    #  abline(v = Firsthospageinput,col = \"black\",lty = 2, lwd=5)\n  })\n  \n  \n  #Mulitvariate Visualization of Sex vs Onset Age \n  \n  # Color distinguishes gender \n  # User input sex and onset age - vertical bar shows input\n  \n  onset_sex_df <- cbind(id = panss.data$id, onsetage = panss.data$onsetage, sex = panss.data$sex)\n  onset_sex_df <- as.data.frame(onset_sex_df)\n  onset_sex_df <- onset_sex_df[!duplicated(onset_sex_df$id),]\n  onset_sex_df <- na.omit(onset_sex_df)\n  \n  #Convert onset age from Factor to Numeric\n  \n  onset_sex_df <- within(onset_sex_df,{\n    onsetage <- as.numeric(as.character(onsetage))\n  })\n  \n  #create dataframe for individual gender\n  onset_male_df <- onset_sex_df[onset_sex_df$sex =='MALE',]\n  onset_female_df <- onset_sex_df[onset_sex_df$sex == \"FEMALE\",]\n  \n  #display onset vs gender frequencies, dependent on user selection\n  output$genderonsetplot <- renderPlot({\n    \n    gender_onset_plot <- ggplot(onset_sex_df, aes(x= onsetage)) + geom_density(aes(group = sex, color = sex, fill = sex, alpha = 0.2)) \n    gender_onset_plot <- gender_onset_plot + scale_fill_manual(values = c('pink', 'lightblue'))\n    gender_onset_plot <- gender_onset_plot + ggtitle('Age of Symptom Onset by Gender') + labs(x = 'Onset Age in Years', y = 'Density' )\n    \n    male_onset_plot <-ggplot(onset_male_df, aes(x= onsetage)) + geom_density(color = \"lightblue\", fill = \"lightblue\") \n    male_onset_plot <- male_onset_plot + ggtitle('Age of Symptom Onset for Males') + labs( x = 'Onset Age in Years', y = \"Density\")\n    \n    female_onset_plot <- ggplot(onset_female_df, aes(x= onsetage)) + geom_density(color = \"pink\", fill = \"pink\")\n    female_onset_plot <- female_onset_plot + ggtitle('Age of Symptom Onset for Femles') + labs( x = 'Onset Age in Years', y = \"Density\")\n    \n    female_onset_plot + geom_vline(xintercept = input$age2)\n    male_onset_plot + geom_vline(xintercept = input$age2)\n    gender_onset_plot + geom_vline(xintercept = input$age2)\n    \n  })\n  \n  #Multivariate Visualization of Treatment vs Change in Total PANSS Score for full-time patients\n  \n  output$treatmentchangePANSSplot <- renderPlot({\n    \n    boxplot(totpanchange ~ treatment, data=panss.data, main=\"Total PANSS Score\",\n            ylab=\"Change in Total PANSS Score\", xlab=\"Treatment\", \n            names=c(\"Placebo\",\"Haloperidol\", \"Risperidone 2mg\", \"Risperidone 6mg\", \"Risperidone 10mg\", \"Risperidone 16mg\"),horizontal=FALSE,\n            col = if(input$treatment == \"Placebo\") {\n              c(\"white\", \"skyblue1\", \"skyblue1\", \"skyblue1\", \"skyblue1\", \"skyblue1\")\n            } else if (input$treatment == \"Haloperidol\") {\n              c(\"skyblue1\", \"white\", \"skyblue1\", \"skyblue1\", \"skyblue1\", \"skyblue1\")\n            } else if (input$treatment == \"Risperidone_2mg\") {\n              c(\"skyblue1\", \"skyblue1\", \"white\", \"skyblue1\", \"skyblue1\", \"skyblue1\")\n            } else if (input$treatment == \"Risperidone_6mg\")  {\n              c(\"skyblue1\", \"skyblue1\", \"skyblue1\", \"white\", \"skyblue1\", \"skyblue1\")\n            } else if (input$treatment == \"Risperidone_10mg\") {\n              c(\"skyblue1\", \"skyblue1\", \"skyblue1\", \"skyblue1\", \"white\", \"skyblue1\")\n            } else if (input$treatment == \"Risperidone_16mg\") {\n              c(\"skyblue1\", \"skyblue1\", \"skyblue1\", \"skyblue1\", \"skyblue1\", \"white\")\n            }    \n    )\n  })\n  \n  output$my.regression <- renderPlot({\n    \n    ordered.panss.data <- panss.data[with(panss.data, order(id, time)), ]\n    \n    ## treatment IDs\n    # PLACEBO = 0\n    # HALOPERIDOL = 1\n    # RISPERIDONE_2MG = 2\n    # RISPERIDONE_6MG = 3\n    # RISPERIDONE_10MG = 4\n    # RISPERIDONE_16MG = 5\n    \n    ordered.panss.data$treatmentID <- vector(length = 2992)\n    for (i in 1:2992) {\n      if (ordered.panss.data$treatment[i] == \"PLACEBO\") {\n        ordered.panss.data$treatmentID[i] = 0\n      } else if (ordered.panss.data$treatment[i] == \"HALOPERIDOL\") {\n        ordered.panss.data$treatmentID[i] = 1\n      } else if (ordered.panss.data$treatment[i] == \"RISPERIDONE_2MG\") {\n        ordered.panss.data$treatmentID[i] = 2\n      } else if (ordered.panss.data$treatment[i] == \"RISPERIDONE_6MG\") {\n        ordered.panss.data$treatmentID[i] = 3\n      } else if (ordered.panss.data$treatment[i] == \"RISPERIDONE_10MG\") {\n        ordered.panss.data$treatmentID[i] = 4 \n      } else if (ordered.panss.data$treatment[i] == \"RISPERIDONE_16MG\") {\n        ordered.panss.data$treatmentID[i] = 5\n      } else {\n      }\n    }\n    \n    #get only patients who lasted entire 8 weeks\n    \n    #  pt.data<-data.frame(id=unique(panss.data$id))\n    #  (n<-dim(pt.data)[1])\n    #  pt.data$last.followup<-vector(length=n)\n    \n    #   pt.data <- pt.data \n    #  for(i in 1:n){\n    #   pt.data$last.followup[i]<-max(panss.data$time[panss.data$id==pt.data$id[i]])}\n    #pt.data.fulltrial<-pt.data[pt.data$last.followup==8,]\n    #fulltrial.id <- pt.data.fulltrial[1]\n    #fulltrial.id.matrix <-as.matrix(fulltrial.id)\n    \n    \n    colordf <- ordered.panss.data[,c(2,7,15)]\n    colordf <- colordf[!duplicated(colordf$id),]\n    (n <- dim(colordf)[1])\n    colordf$lastfollowup <- vector(length = n)\n    \n    for (i in 1:n){\n      colordf$lastfollowup[i] <- max(panss.data$time[panss.data$id == colordf$id[i]  ])}\n    \n    colordf<- colordf[colordf$lastfollowup == 8,]\n    \n    plot(x=0, y=mean(ordered.panss.data$totpan), type=\"n\", xlim=c(-1,8), ylim=c(30,150), xlab=\"Week\", ylab=\"Total PANSS Score\", main = \"Predicting Antipsychotic Treatment Outcomes Using Multilevel Regression\")\n    for(i in 1:270){\n      \n      lines(ordered.panss.data$totpan[ordered.panss.data$id == colordf[i,1]]~ordered.panss.data$time[ordered.panss.data$id==colordf[i,1]],\n            col = if (colordf[i,3] == 0 ) {\n              \"pink\"\n            } else if (colordf[i,3] == 1){\n              \"lightsalmon\"\n            } else if (colordf[i,3]== 2){\n              \"skyblue1\"\n            } else if (colordf[i,3] == 3){\n              \"skyblue2\"\n            } else if (colordf[i,3]== 4){\n              \"skyblue3\"\n            } else {\"skyblue4\"}\n      )} \n    \n    \n    #lines(ordered.panss.data$totpan[ordered.panss.data$id==fulltrial.id.matrix[i]]~ordered.panss.data$time[ordered.panss.data$id==fulltrial.id.matrix[i]], col=\"light blue3\")}\n    #legend(\"bottomright\", cex=0.6, legend=c(\"High-Income\", \"Low-Income\", \"Selected High-Income\", \"Selected Low-Income\"), pch=c(19,19,19,19, NA,NA,NA,NA), col=c(\"light blue3\", \"coral\", \"blue\", \"deeppink\"), bty = \"n\") \n    grid(nx = NULL)\n    \n    recorded_plot <- recordPlot()\n    \n    ## treatment IDs\n    # PLACEBO = 0\n    # HALOPERIDOL = 1\n    # RISPERIDONE_2MG = 2\n    # RISPERIDONE_6MG = 3\n    # RISPERIDONE_10MG = 4\n    # RISPERIDONE_16MG = 5\n    \n    ordered.panss.data$treatmentID <- vector(length = 2992)\n    for (i in 1:2992) {\n      if (ordered.panss.data$treatment[i] == \"PLACEBO\") {\n        ordered.panss.data$treatmentID[i] = 0\n      } else if (ordered.panss.data$treatment[i] == \"HALOPERIDOL\") {\n        ordered.panss.data$treatmentID[i] = 1\n      } else if (ordered.panss.data$treatment[i] == \"RISPERIDONE_2MG\") {\n        ordered.panss.data$treatmentID[i] = 2\n      } else if (ordered.panss.data$treatment[i] == \"RISPERIDONE_6MG\") {\n        ordered.panss.data$treatmentID[i] = 3\n      } else if (ordered.panss.data$treatment[i] == \"RISPERIDONE_10MG\") {\n        ordered.panss.data$treatmentID[i] = 4 \n      } else if (ordered.panss.data$treatment[i] == \"RISPERIDONE_16MG\") {\n        ordered.panss.data$treatmentID[i] = 5\n      } else {\n      }\n    }\n    \n    weekly.df <- as.data.frame(cbind(ordered.panss.data$id, ordered.panss.data$onsetage,\n                                     ordered.panss.data$treatmentID, ordered.panss.data$time,\n                                     ordered.panss.data$totpan))\n    colnames(weekly.df) <- c(\"id\", \"onsetage\", \"treatment\", \"time\", \"totpan\")\n    \n    \n    if(input$my.treatment == \"Placebo\") {\n      my.treatmentID = 0}\n    if(input$my.treatment == \"Haloperidol\") {\n      my.treatmentID = 1}\n    if(input$my.treatment == \"Risperidone_2mg\") {\n      my.treatmentID = 2}\n    if(input$my.treatment == \"Risperidone_6mg\") {\n      my.treatmentID = 3}\n    if(input$my.treatment == \"Risperidone_10mg\") {\n      my.treatmentID = 4}\n    if(input$my.treatment == \"Risperidone_16mg\") {\n      my.treatmentID = 5}\n    \n    n = 752\n    newrows<-data.frame(id=rep(n+1,3))\n    newrows$onsetage<-rep(input$my.onsetage,3)\n    newrows$treatment<-rep(my.treatmentID, 3)\n    newrows$time<-c(-1,0,1)\n    newrows$totpan<-c(input$my.totpanneg1,input$my.totpan0, input$my.totpan1)\n    \n    weekly.df.new<-as.data.frame(rbind(weekly.df, newrows))\n    \n    predictrows<-data.frame(id = rep(n+1,4))\n    predictrows$onsetage<-rep(input$my.onsetage,4)\n    predictrows$treatment<-rep(my.treatmentID, 4)\n    predictrows$time<-c(2,4,6,8)\n    \n    panss.rint <- lmer(totpan ~ time + onsetage + treatment + (1 | id), data = ordered.panss.data, REML = FALSE)\n    sigma_rint <- sigma.hat(panss.rint)$sigma$data\n    \n    last.row<-dim(coef(panss.rint)$id)[1]\n    coef_rint <- as.numeric(coef(panss.rint)$id[last.row,])\n    names(coef(panss.rint)$id)\n    \n    if(predictrows$treatment[1] == 0){\n      matrix_treatments <- cbind(rep(0,4), rep(0,4), rep(0,4),rep(0,4), rep(0,4))}\n    if(predictrows$treatment[1] == 1){\n      matrix_treatments <- cbind(rep(1,4), rep(0,4), rep(0,4),rep(0,4), rep(0,4))}\n    if(predictrows$treatment[1] == 2){\n      matrix_treatments <- cbind(rep(0,4), rep(1,4), rep(0,4),rep(0,4), rep(0,4))}\n    if(predictrows$treatment[1] == 3){\n      matrix_treatments <- cbind(rep(0,4), rep(0,4), rep(1,4),rep(0,4), rep(0,4))}\n    if(predictrows$treatment[1] == 4){\n      matrix_treatments <- cbind(rep(0,4), rep(0,4), rep(0,4),rep(1,4), rep(0,4))}\n    if(predictrows$treatment[1] == 5){\n      matrix_treatments <- cbind(rep(0,4), rep(0,4), rep(0,4),rep(0,4), rep(1,4))}\n    \n    matrix_rint <- as.matrix(cbind(1, predictrows$time, predictrows$onsetage, matrix_treatments))\n    \n    n.sims<-10000\n    sim_values_rint<-matrix(apply(matrix_rint%*%coef_rint, 1, rnorm, n=n.sims, sd=sigma_rint), nrow=n.sims, ncol=length(c(2,4,6,8)), byrow=FALSE)\n    fit_rint<-apply(sim_values_rint,2,mean) #mean\n    lwr_rint<-apply(sim_values_rint,2,quantile, p=0.025) #lower 2.5%\n    upr_rint<-apply(sim_values_rint,2,quantile, p=0.975) #upper 97.5%\n    \n    lines(weekly.df.new$totpan[weekly.df.new$id==(n+1)] ~ weekly.df.new$time[weekly.df.new$id==(n+1)], col= \"purple4\", lty=\"solid\", lwd=2)\n    polygon( c(predictrows$time, rev(predictrows$time)), c(lwr_rint, rev(upr_rint)), col=rgb(1,0,1,0.4), border=NA )\n    lines(fit_rint~c(2,4,6,8), col=\"purple4\", lty=\"dotted\", lwd=3)\n    #legend(\"bottomleft\", \"Random Intercept Model\", bty=\"n\")\n    #lines(yearly.data$lifeexp[yearly.data$country==selectedCountry]~yearly.data$year[yearly.data$country==selectedCountry], col=ordered.panss.data$treatment.factor))\n    \n  })\n  \n  output$my.regressiontext <- renderText({\n    \n    ordered.panss.data <- panss.data[with(panss.data, order(id, time)), ]\n    \n    #get only patients who lasted entire 8 weeks\n    pt.data<-data.frame(id=unique(panss.data$id))\n    (n<-dim(pt.data)[1])\n    pt.data$last.followup<-vector(length=n)\n    for(i in 1:n){\n      pt.data$last.followup[i]<-max(panss.data$time[panss.data$id==pt.data$id[i]])}\n    pt.data.fulltrial<-pt.data[pt.data$last.followup==8,]\n    fulltrial.id <- pt.data.fulltrial[1]\n    fulltrial.id.matrix <-as.matrix(fulltrial.id)\n    \n    ## treatment IDs\n    # PLACEBO = 0\n    # HALOPERIDOL = 1\n    # RISPERIDONE_2MG = 2\n    # RISPERIDONE_6MG = 3\n    # RISPERIDONE_10MG = 4\n    # RISPERIDONE_16MG = 5\n    \n    ordered.panss.data$treatmentID <- vector(length = 2992)\n    for (i in 1:2992) {\n      if (ordered.panss.data$treatment[i] == \"PLACEBO\") {\n        ordered.panss.data$treatmentID[i] = 0\n      } else if (ordered.panss.data$treatment[i] == \"HALOPERIDOL\") {\n        ordered.panss.data$treatmentID[i] = 1\n      } else if (ordered.panss.data$treatment[i] == \"RISPERIDONE_2MG\") {\n        ordered.panss.data$treatmentID[i] = 2\n      } else if (ordered.panss.data$treatment[i] == \"RISPERIDONE_6MG\") {\n        ordered.panss.data$treatmentID[i] = 3\n      } else if (ordered.panss.data$treatment[i] == \"RISPERIDONE_10MG\") {\n        ordered.panss.data$treatmentID[i] = 4 \n      } else if (ordered.panss.data$treatment[i] == \"RISPERIDONE_16MG\") {\n        ordered.panss.data$treatmentID[i] = 5\n      } else {\n      }\n    }\n    \n    weekly.df <- as.data.frame(cbind(ordered.panss.data$id, ordered.panss.data$onsetage,\n                                     ordered.panss.data$treatmentID, ordered.panss.data$time,\n                                     ordered.panss.data$totpan))\n    colnames(weekly.df) <- c(\"id\", \"onsetage\", \"treatment\", \"time\", \"totpan\")\n    \n    \n    if(input$my.treatment == \"Placebo\") {\n      my.treatmentID = 0}\n    if(input$my.treatment == \"Haloperidol\") {\n      my.treatmentID = 1}\n    if(input$my.treatment == \"Risperidone_2mg\") {\n      my.treatmentID = 2}\n    if(input$my.treatment == \"Risperidone_6mg\") {\n      my.treatmentID = 3}\n    if(input$my.treatment == \"Risperidone_10mg\") {\n      my.treatmentID = 4}\n    if(input$my.treatment == \"Risperidone_16mg\") {\n      my.treatmentID = 5}\n    \n    n = 752\n    newrows<-data.frame(id=rep(n+1,3))\n    newrows$onsetage<-rep(input$my.onsetage,3)\n    newrows$treatment<-rep(my.treatmentID, 3)\n    newrows$time<-c(-1,0,1)\n    newrows$totpan<-c(input$my.totpanneg1,input$my.totpan0, input$my.totpan1)\n    \n    weekly.df.new<-as.data.frame(rbind(weekly.df, newrows))\n    \n    predictrows<-data.frame(id = rep(n+1,4))\n    predictrows$onsetage<-rep(input$my.onsetage,4)\n    predictrows$treatment<-rep(my.treatmentID, 4)\n    predictrows$time<-c(2,4,6,8)\n    \n    panss.rint <- lmer(totpan ~ time + onsetage + treatment + (1 | id), data = ordered.panss.data, REML = FALSE)\n    sigma_rint <- sigma.hat(panss.rint)$sigma$data\n    \n    last.row<-dim(coef(panss.rint)$id)[1]\n    coef_rint <- as.numeric(coef(panss.rint)$id[last.row,])\n    names(coef(panss.rint)$id)\n    \n    if(predictrows$treatment[1] == 0){\n      matrix_treatments <- cbind(rep(0,4), rep(0,4), rep(0,4),rep(0,4), rep(0,4))}\n    if(predictrows$treatment[1] == 1){\n      matrix_treatments <- cbind(rep(1,4), rep(0,4), rep(0,4),rep(0,4), rep(0,4))}\n    if(predictrows$treatment[1] == 2){\n      matrix_treatments <- cbind(rep(0,4), rep(1,4), rep(0,4),rep(0,4), rep(0,4))}\n    if(predictrows$treatment[1] == 3){\n      matrix_treatments <- cbind(rep(0,4), rep(0,4), rep(1,4),rep(0,4), rep(0,4))}\n    if(predictrows$treatment[1] == 4){\n      matrix_treatments <- cbind(rep(0,4), rep(0,4), rep(0,4),rep(1,4), rep(0,4))}\n    if(predictrows$treatment[1] == 5){\n      matrix_treatments <- cbind(rep(0,4), rep(0,4), rep(0,4),rep(0,4), rep(1,4))}\n    \n    matrix_rint <- as.matrix(cbind(1, predictrows$time, predictrows$onsetage, matrix_treatments))\n    \n    n.sims<-10000\n    sim_values_rint<-matrix(apply(matrix_rint%*%coef_rint, 1, rnorm, n=n.sims, sd=sigma_rint), nrow=n.sims, ncol=length(c(2,4,6,8)), byrow=FALSE)\n    fit_rint<-apply(sim_values_rint,2,mean) #mean\n    lwr_rint<-apply(sim_values_rint,2,quantile, p=0.025) #lower 2.5%\n    upr_rint<-apply(sim_values_rint,2,quantile, p=0.975) #upper 97.5%\n\n    \n    paste0(\"Based on your initial total PANSS scores of \", input$my.totpanneg1, \", \", input$my.totpan0, \", and \", input$my.totpan1, \" , along with your age of onset of symptoms and treatment type, you have predicted PANSS scores of \", signif(fit_rint[1], digits = 4), \", \", signif(fit_rint[2], digits = 4), \", \", signif(fit_rint[3], digits = 4), \", and \", signif(fit_rint[4], digits = 4), \" , for weeks 2, 4, 6, and 8, respectively. The lower bounds for these values are \", signif(lwr_rint[1], digits = 4), \", \", signif(lwr_rint[2], digits = 4), \", \", signif(lwr_rint[3], digits = 4), \", and \", signif(lwr_rint[4], digits = 4),\" with upper bounds of \", signif(upr_rint[1], digits = 4), \", \", signif(upr_rint[2], digits = 4), \", \", signif(upr_rint[3], digits = 4), \" and \", signif(upr_rint[4], digits = 4), \" , respectively.\")\n  })\n  \n  \n})",
    "created" : 1460474443782.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "509377287",
    "id" : "954D0166",
    "lastKnownWriteTime" : 1461432136,
    "last_content_update" : 1461432136596,
    "path" : "~/Final Project Work/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}