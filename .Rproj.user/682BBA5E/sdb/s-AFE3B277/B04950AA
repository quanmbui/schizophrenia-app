{
    "collab_server" : "",
    "contents" : "#Final  Project\n#Mental Health Group\n\n#Load ggplot2 library\nlibrary(shiny)\nlibrary(ggplot2)\nlibrary(lme4)\nlibrary(arm)\n\nshinyServer(function(input,output){\n  \n  #Load Dataset\n  panss.data <- read.csv(\"panss-data.csv\", stringsAsFactors=FALSE)\n  panss.data <- as.data.frame(panss.data)\n  patient.list<-unique(panss.data$id)\n  \n  #Overview of study participants - pie chart for sex\n  \n  output$sexpie <- renderPlot({\n    sex_table <- as.data.frame(cbind(id = panss.data$id, sex = panss.data$sex))\n    sex_table <- sex_table[!duplicated(sex_table$id),]\n    sex_table <- na.omit(sex_table)\n\n    sexpie = sex_table$sex\n    sex.freq = table(sex_table$sex)\n    piecolors = c(\"pink\", \"lightblue\")\n    piepercent <- round(100*sex.freq/sum(sex.freq),1)\n    pie(sex.freq, labels = c(\"Female\", \"Male\"), col = piecolors, \n        main = \"Sex Distribution of Study Participants\", cex = .7)\n    })\n  \n  #Overview of study participants - pie chart for race\n  \n  output$racepie <- renderPlot({\n    race_table <- as.data.frame(cbind(id = panss.data$id, race = panss.data$race))\n    race_table <- race_table[!duplicated(race_table$id),]\n    race_table <- na.omit(race_table)\n    \n    racepie = race_table$race\n    race.freq = table(race_table$race)\n    pielabels = c(\"American Indian\", \"Pacific Islander\", \"Asian\", \"Hispanic\", \"Black\", \"White\")\n    pie(sort(race.freq), labels=pielabels, main = \"Race Distribution of Study Participants\", cex = .7)\n  })\n\n  \n  #Univariate Visualization of Onset Age\n \n  onsetagedf <- as.data.frame(cbind(id = panss.data$id, onset = panss.data$onsetage))\n  onsetagedf <- onsetagedf[!duplicated(onsetagedf$id),]\n  onsetagedf <- na.omit(onsetagedf)\n  \n  output$onsetageplot <- renderPlot({\n    \n    onset.hist <- hist(onsetagedf$onset, breaks=seq(0,250,5), plot = FALSE)\n    \n    h <- hist(onsetagedf$onset)\n    h$density = h$counts/sum(h$counts)*100\n    plot(h, xlab=\"Age at Symptom Onset in Years\", ylab=\"Percentage of Patients\",\n       main=\"Age at Symptom Onset (523 Patients)\", xlim=c(0,45), freq=FALSE, \n       col=ifelse(onset.hist$breaks < input$age, \"#adebad\", \"forestgreen\"))\n    grid()\n    OnsetAgeinput <-  panss.data$onsetage[which(panss.data$onsetage == input$age)]\n  \n      })\n  \n\n  agecount <- as.vector(onsetagedf$onset)\n  countdf <- rle(sort(agecount))\n  countdf <- data.frame(age = countdf$values, n = countdf$lengths)\n  \n  for (i in 1:60){\n    \n    if (i %in% countdf$age){\n    } else {\n        countdf<- rbind(countdf, c(i, 0))\n    }} \n  \n  countdf <- countdf[order(countdf$age),]\n  \n\n  \n  \noutput$onsetagetext <- renderText({\n  \n  numage <- as.numeric(input$age)\n  numerator <- 0\n  \n  for (i in 1: numage) {\n    \n    numerator <- countdf[i,2] + numerator\n  }\n  \n  denominator <- sum(countdf$n)\n  \n  percentage <- (numerator / denominator) * 100\n  \n  percentage <- round(percentage, 2)\n  \n  paste0(percentage, \"% of patients are \", numage, \" years or younger.\")\n  \n})\n  \n  #Univariate Visualization of firsthospage\n\nfirsthopdf <- as.data.frame(cbind(id = panss.data$id, firsthop = panss.data$firsthospage))\nfirsthopdf <- firsthopdf[!duplicated(firsthopdf$id),]\nfirsthopdf <- na.omit(firsthopdf)\n\n  output$firsthospageplot <- renderPlot({\n    \n\n    \n    firsthosp.hist <- hist(firsthopdf$firsthop, breaks=seq(0,200,5), plot = FALSE)\n    \n    h <- hist(firsthopdf$firsthop)\n    h$density = h$counts/sum(h$counts)*100\n    plot(h, xlab=\"Age at First Hospitalization in Years\", ylab=\"Percentage of Patients\",\n         main=\"Age at First Hospitalization (523 Patients)\", xlim=c(0,60), freq=FALSE,\n    col=ifelse(firsthosp.hist$breaks < input$age,\"#ffc0b6\", \"#ff5336\"))\n    grid()\n    Firsthospageinput <-  panss.data$firsthospage[which(panss.data$firsthospage == input$age)]\n    #  abline(v = Firsthospageinput,col = \"black\",lty = 2, lwd=5)\n  })\n  \n  \n  \n hospcount <- as.vector(firsthopdf$firsthop)\n counthopdf <- rle(sort(hospcount))\n counthopdf <- data.frame(hopage = counthopdf$values, n = counthopdf$lengths)\n  \n  for (i in 1:60){\n    \n    if (i %in% counthopdf$hopage){\n    } else {\n      counthopdf<- rbind(counthopdf, c(i, 0))\n    }} \n  \n  counthopdf <- counthopdf[order(counthopdf$hopage),]\n  \n  output$firsthoptext <- renderText({\n    \n    numage <- as.numeric(input$age)\n    numerator <- 0\n    \n    for (i in 1: numage) {\n      \n      numerator <- counthopdf[i,2] + numerator\n    }\n    \n    denominator <- sum(counthopdf$n)\n    \n    percentage <- (numerator / denominator) * 100\n    \n    percentage <- round(percentage, 2)\n    \n    paste0(percentage, \"% of patients are first hospitalized at \", numage, \" years old or younger.\")\n    \n  })\n  \n  #Mulitvariate Visualization of Sex vs Onset Age \n  \n  # Color distinguishes gender \n  # User input sex and onset age - vertical bar shows input\n  \n  onset_sex_df <- cbind(id = panss.data$id, onsetage = panss.data$onsetage, sex = panss.data$sex)\n  onset_sex_df <- as.data.frame(onset_sex_df)\n  onset_sex_df <- onset_sex_df[!duplicated(onset_sex_df$id),]\n  onset_sex_df <- na.omit(onset_sex_df)\n  \n  #Convert onset age from Factor to Numeric\n  \n  onset_sex_df <- within(onset_sex_df,{\n    onsetage <- as.numeric(as.character(onsetage))\n  })\n  \n # create dataframe for individual gender\n  onset_male_df <- onset_sex_df[onset_sex_df$sex =='MALE',]\n  onset_female_df <- onset_sex_df[onset_sex_df$sex == \"FEMALE\",]\n  \n  malecount <- as.vector(onset_male_df$onsetage)\n  malecount <- rle(sort(malecount))\n  malecountdf <- data.frame(onsetage = malecount$values, n = malecount$lengths)\n  \n  for (i in 1:60){\n    \n    if (i %in% malecountdf$onsetage){\n    } else {\n      malecountdf<- rbind(malecountdf, c(i, 0))\n    }} \n  \n  malecountdf <- malecountdf[order(malecountdf$onsetage),]\n  \n  femalecount <- as.vector(onset_female_df$onsetage)\n  femalecount <- rle(sort(femalecount))\n  femalecountdf <- data.frame(onsetage = femalecount$values, n = femalecount$lengths)\n  \n  for (i in 1:60){\n    \n    if (i %in% femalecountdf$onsetage){\n    } else {\n      femalecountdf<- rbind(femalecountdf, c(i, 0))\n    }} \n  \n  femalecountdf <- femalecountdf[order(femalecountdf$onsetage),]\n  \n  output$maletext <- renderText({\n    \n    numage <- as.numeric(input$age2)\n    numerator <- 0\n    \n    for (i in 1: numage) {\n      \n      numerator <- malecountdf[i,2] + numerator\n    }\n    \n    denominator <- sum(malecountdf$n)\n    \n    percentage <- (numerator / denominator) * 100\n    \n    percentage <- round(percentage, 2)\n    \n    paste0(percentage, \"% of males\")\n    \n  })\n  \n  output$femaletext <- renderText({\n    \n    numage <- as.numeric(input$age2)\n    numerator2 <- 0\n    \n    for (i in 1: numage) {\n      \n      numerator2 <- femalecountdf[i,2] + numerator2\n    }\n    \n    denominator2 <- sum(femalecountdf$n)\n    \n    percentage2 <- (numerator2 / denominator2) * 100\n    \n    percentage2 <- round(percentage2, 2)\n    \n    paste0(percentage2, \"% of females\")\n    \n  })\n  \n  output$agetext <- renderText({\n    numage <- as.numeric(input$age2)\n    paste0(numage)\n  }\n    \n  )\n  \n  \n  \n  #display onset vs gender frequencies, dependent on user selection\n  output$genderonsetplot <- renderPlot({\n    \n    gender_onset_plot <- ggplot(onset_sex_df, aes(x= onsetage)) + geom_density(aes(group = sex, color = sex, fill = sex), alpha = 0.6) \n    gender_onset_plot <- gender_onset_plot + scale_fill_manual(values = c('pink', 'lightblue'))\n    gender_onset_plot <- gender_onset_plot + ggtitle('Age of Symptom Onset by Gender') + labs(x = 'Onset Age in Years', y = 'Density' )\n    \n   # male_onset_plot <-ggplot(onset_male_df, aes(x= onsetage)) + geom_density(color = \"lightblue\", fill = \"lightblue\") \n   # male_onset_plot <- male_onset_plot + ggtitle('Age of Symptom Onset for Males') + labs( x = 'Onset Age in Years', y = \"Density\")\n    \n   # female_onset_plot <- ggplot(onset_female_df, aes(x= onsetage)) + geom_density(color = \"pink\", fill = \"pink\")\n   # female_onset_plot <- female_onset_plot + ggtitle('Age of Symptom Onset for Femles') + labs( x = 'Onset Age in Years', y = \"Density\")\n    \n    #female_onset_plot + geom_vline(xintercept = input$age2)\n  #  male_onset_plot + geom_vline(xintercept = input$age2)\n    gender_onset_plot + geom_vline(xintercept = input$age2) + theme_bw() + theme(plot.title = element_text(face = \"bold\"))\n    \n  })\n  \n  #Multivariate Visualization of Treatment vs Change in Total PANSS Score for full-time patients\n  \n  output$treatmentchangePANSSplot <- renderPlot({\n    par(mar = c(5,5,5,5) + 0.1)\n    boxplot(totpanchange ~ treatment, at=c(2,1,4,3,5,6),\n            data=panss.data, main=\"Change in Total PANSS Score Based on Treatment\",\n            ylab=\"Change in Total PANSS Score\", xlab=\"Treatment\", las=2, cex.axis = .6,\n            names=c(\"Haloperidol\",\"Placebo\", \"Risperidone 16mg\", \"Risperidone 10mg\", \"Risperidone 2mg\", \"Risperidone 6mg\"),horizontal=FALSE,\n            col = if(input$treatment == \"Placebo\") {\n              c(\"white\", \"skyblue1\", \"white\", \"white\", \"white\", \"white\")\n            } else if (input$treatment == \"Haloperidol\") {\n              c(\"skyblue1\", \"white\", \"white\", \"white\", \"white\", \"white\")\n            } else if (input$treatment == \"Risperidone_2mg\") {\n              c(\"white\", \"white\", \"white\", \"white\", \"skyblue1\", \"white\")\n            } else if (input$treatment == \"Risperidone_6mg\")  {\n              c(\"white\", \"white\", \"white\", \"white\", \"white\", \"skyblue1\")\n            } else if (input$treatment == \"Risperidone_10mg\") {\n              c(\"white\", \"white\", \"white\", \"skyblue1\", \"white\", \"white\")\n            } else if (input$treatment == \"Risperidone_16mg\") {\n              c(\"white\", \"white\", \"skyblue1\", \"white\", \"white\", \"white\")\n            }    \n    )\n    grid(nx = NULL)\n    \n  })\n  \n  output$treatmentchangePANSStext <- renderText({\n       if(input$treatment == \"Placebo\") {\n         output <- c(\"Patients taking the placebo for eight weeks experienced a median change in PANSS score of\", median(na.omit(panss.data$totpanchange[panss.data$treatment == \"PLACEBO\"])), \"points.\")\n       } else if (input$treatment == \"Haloperidol\") {\n         output <- c(\"Patients taking haloperidol for eight weeks experienced a median change in PANSS score of\", median(na.omit(panss.data$totpanchange[panss.data$treatment == \"HALOPERIDOL\"])), \"points.\")\n       } else if (input$treatment == \"Risperidone_2mg\") {\n         output <- c(\"Patients taking 2mg of risperidone for eight weeks experienced a median change in PANSS score of\", median(na.omit(panss.data$totpanchange[panss.data$treatment == \"RISPERIDONE_2MG\"])), \"points.\")\n       } else if (input$treatment == \"Risperidone_6mg\") {\n         output <- c(\"Patients taking 6mg of risperidone for eight weeks experienced a median change in PANSS score of\", median(na.omit(panss.data$totpanchange[panss.data$treatment == \"RISPERIDONE_6MG\"])), \"points.\")\n       } else if (input$treatment == \"Risperidone_10mg\") {\n        output <- c(\"Patients taking 10mg of risperidone for eight weeks experienced a median change in PANSS score of\", median(na.omit(panss.data$totpanchange[panss.data$treatment == \"RISPERIDONE_10MG\"])), \"points.\")\n       } else if (input$treatment == \"Risperidone_16mg\") {\n         output <- c(\"Patients taking 16mg of risperidone for eight weeks experienced a median change in PANSS score of\", median(na.omit(panss.data$totpanchange[panss.data$treatment == \"RISPERIDONE_16MG\"])), \"points.\")\n        }    \n      paste0(output)\n  })\n  \n  \n  # preparation for regression output \n  \n  weeks <- c(-1,0,1,2,4,6,8)\n  ordered.panss.data <- panss.data[with(panss.data, order(id, time)), ]\n  \n  ## treatment IDs\n  # PLACEBO = 0\n  # HALOPERIDOL = 1\n  # RISPERIDONE_2MG = 2\n  # RISPERIDONE_6MG = 3\n  # RISPERIDONE_10MG = 4\n  # RISPERIDONE_16MG = 5\n  \n  ordered.panss.data$treatmentID <- vector(length = 2992)\n  for (i in 1:2992) {\n    if (ordered.panss.data$treatment[i] == \"PLACEBO\") {\n      ordered.panss.data$treatmentID[i] = 0\n    } else if (ordered.panss.data$treatment[i] == \"HALOPERIDOL\") {\n      ordered.panss.data$treatmentID[i] = 1\n    } else if (ordered.panss.data$treatment[i] == \"RISPERIDONE_2MG\") {\n      ordered.panss.data$treatmentID[i] = 2\n    } else if (ordered.panss.data$treatment[i] == \"RISPERIDONE_6MG\") {\n      ordered.panss.data$treatmentID[i] = 3\n    } else if (ordered.panss.data$treatment[i] == \"RISPERIDONE_10MG\") {\n      ordered.panss.data$treatmentID[i] = 4 \n    } else if (ordered.panss.data$treatment[i] == \"RISPERIDONE_16MG\") {\n      ordered.panss.data$treatmentID[i] = 5\n    } else {\n    }\n  }\n  \n  colordf <- ordered.panss.data[,c(2,7,15)]\n  colordf <- colordf[!duplicated(colordf$id),]\n  (n <- dim(colordf)[1])\n  colordf$lastfollowup <- vector(length = n)\n  \n  for (i in 1:n){\n    colordf$lastfollowup[i] <- max(panss.data$time[panss.data$id == colordf$id[i]  ])}\n  \n  colordf<- colordf[colordf$lastfollowup == 8,]\n  \n  weekly.df <- as.data.frame(cbind(ordered.panss.data$id, ordered.panss.data$onsetage,\n                                   ordered.panss.data$treatmentID, ordered.panss.data$time,\n                                   ordered.panss.data$totpan))\n  colnames(weekly.df) <- c(\"id\", \"onsetage\", \"treatment\", \"time\", \"totpan\")\n  \n  # multilevel regression output\n  \n  output$my.regression <- renderPlot({\n\n    if(input$my.treatment == \"none\") {\n      my.treatmentID = 0}\n    if(input$my.treatment == \"haloperidol\") {\n      my.treatmentID = 1}\n    if(input$my.treatment == \"risperidone (2mg)\") {\n      my.treatmentID = 2}\n    if(input$my.treatment == \"risperidone (6mg)\") {\n      my.treatmentID = 3}\n    if(input$my.treatment == \"risperidone (10mg)\") {\n      my.treatmentID = 4}\n    if(input$my.treatment == \"risperidone (16mg)\") {\n      my.treatmentID = 5}\n    \n    plot(x=0, y=mean(ordered.panss.data$totpan), type=\"n\", xlim=c(-1,8), ylim=c(30,150), xlab=\"Week\", ylab=\"Total PANSS Score\", main = \"Antipsychotic Treatment Outcome Predictions Over Eight Weeks\")\n\n    for (i in 1:270){\n      if (colordf[i,3] == my.treatmentID){\n        lines(ordered.panss.data$totpan[ordered.panss.data$id == colordf[i,1]]~ordered.panss.data$time[ordered.panss.data$id==colordf[i,1]],\n              col = if (colordf[i,3] == 0 ) {\n                \"pink\"\n              } else if (colordf[i,3] == 1){\n                \"lightsalmon\"\n              } else if (colordf[i,3]== 2){\n                \"skyblue1\"\n              } else if (colordf[i,3] == 3){\n                \"#a6f2a6\"\n              } else if (colordf[i,3]== 4){\n                \"#f8c968\"\n              } else {\"#afeeee\"}\n        )}   \n      }\n    grid(nx = NULL)\n    recorded_plot <- recordPlot()\n    \n      numset <- input$numind\n      indset <- c(input$ninput1, \n                  input$ninput2, \n                  input$ninput3, \n                  input$ninput4, \n                  input$ninput5,\n                  input$ninput6)\n      inputset <- c()\n      for (i in 1:numset) {\n        inputset <- c(inputset, indset[i])\n      }\n    \n    \n    \n    n = 752\n    newrows<-data.frame(id=rep(n+1,input$numind))\n    newrows$onsetage<-rep(input$my.onsetage,input$numind)\n    newrows$treatment<-rep(my.treatmentID, input$numind)\n    newrows$time<-weeks[1:input$numind]\n    newrows$totpan<-inputset\n    \n    weekly.df.new<-as.data.frame(rbind(weekly.df, newrows))\n    \n    predictrows<-data.frame(id = rep(n+1,(7-numset)))\n    predictrows$onsetage<-rep(input$my.onsetage,(7-numset))\n    predictrows$treatment<-rep(my.treatmentID, (7-numset))\n    predictrows$time<-weeks[(numset+1):length(weeks)]\n    \n    panss.rint <- lmer(totpan ~ time + onsetage + treatment + (1 | id), data = weekly.df.new, REML = FALSE)\n    sigma_rint <- sigma.hat(panss.rint)$sigma$data\n    \n    last.row<-dim(coef(panss.rint)$id)[1]\n    coef_rint <- as.numeric(coef(panss.rint)$id[last.row,])\n    names(coef(panss.rint)$id)\n    \n    matrix_rint <- as.matrix(cbind(1, predictrows$time, predictrows$onsetage, predictrows$treatment))\n    \n    n.sims<-10000\n    sim_values_rint<-matrix(apply(matrix_rint%*%coef_rint, 1, rnorm, n=n.sims, sd=sigma_rint), nrow=n.sims, ncol=length(predictrows$time), byrow=FALSE)\n    fit_rint<-apply(sim_values_rint,2,mean) #mean\n    lwr_rint<-apply(sim_values_rint,2,quantile, p=0.025) #lower 2.5%\n    upr_rint<-apply(sim_values_rint,2,quantile, p=0.975) #upper 97.5%\n    \n    lines(weekly.df.new$totpan[weekly.df.new$id==(n+1)] ~ weekly.df.new$time[weekly.df.new$id==(n+1)], col= \"black\", lty=\"solid\", lwd=2)\n    polygon( c(predictrows$time, rev(predictrows$time)), c(lwr_rint, rev(upr_rint)), col=rgb(0,75,100,50, maxColorValue = 255), border=NA )\n    lines(fit_rint~predictrows$time, col=\"black\", lty=\"dotted\", lwd=2)\n    \n    \n  })\n  \n  output$explanation.regression <- renderText({\n    paste0(\"The above plot shows your predicted treatment outcomes. The colored lines show the symptom progressions for all the patients that were on your selected antipsychotic treatment for the full eight weeks of the study. The black solid line shows the PANSS scores that you inputted. The black dotted line shows predicted PANSS scores based on our model. The shaded region shows the range of PANSS scores we can expect to see at each time.\")\n  })\n  \n  output$my.regressiontext <- renderText({\n    if(input$my.treatment == \"none\") {\n      my.treatmentID = 0}\n    if(input$my.treatment == \"haloperidol\") {\n      my.treatmentID = 1}\n    if(input$my.treatment == \"risperidone (2mg)\") {\n      my.treatmentID = 2}\n    if(input$my.treatment == \"risperidone (6mg)\") {\n      my.treatmentID = 3}\n    if(input$my.treatment == \"risperidone (10mg)\") {\n      my.treatmentID = 4}\n    if(input$my.treatment == \"risperidone (16mg)\") {\n      my.treatmentID = 5}\n    \n    numset <- input$numind\n    indset <- c(input$ninput1, \n                input$ninput2, \n                input$ninput3, \n                input$ninput4, \n                input$ninput5,\n                input$ninput6)\n    inputset <- c()\n    for (i in 1:numset) {\n      inputset <- c(inputset, indset[i])\n    }\n    \n    n = 752\n    newrows<-data.frame(id=rep(n+1,input$numind))\n    newrows$onsetage<-rep(input$my.onsetage,input$numind)\n    newrows$treatment<-rep(my.treatmentID, input$numind)\n    newrows$time<-weeks[1:input$numind]\n    newrows$totpan<-inputset\n    \n    weekly.df.new<-as.data.frame(rbind(weekly.df, newrows))\n    \n    predictrows<-data.frame(id = rep(n+1,(7-numset)))\n    predictrows$onsetage<-rep(input$my.onsetage,(7-numset))\n    predictrows$treatment<-rep(my.treatmentID, (7-numset))\n    predictrows$time<-weeks[(numset+1):length(weeks)]\n    \n    panss.rint <- lmer(totpan ~ time + onsetage + treatment + (1 | id), data = weekly.df.new, REML = FALSE)\n    sigma_rint <- sigma.hat(panss.rint)$sigma$data\n    \n    last.row<-dim(coef(panss.rint)$id)[1]\n    coef_rint <- as.numeric(coef(panss.rint)$id[last.row,])\n    names(coef(panss.rint)$id)\n    \n    matrix_rint <- as.matrix(cbind(1, predictrows$time, predictrows$onsetage, predictrows$treatment))\n    \n    n.sims<-10000\n    sim_values_rint<-matrix(apply(matrix_rint%*%coef_rint, 1, rnorm, n=n.sims, sd=sigma_rint), nrow=n.sims, ncol=length(predictrows$time), byrow=FALSE)\n    fit_rint<-apply(sim_values_rint,2,mean) #mean\n    lwr_rint<-apply(sim_values_rint,2,quantile, p=0.025) #lower 2.5%\n    upr_rint<-apply(sim_values_rint,2,quantile, p=0.975) #upper 97.5%\n\n    paste0(\"Based on your given age at symptom onset of \", input$my.onsetage, \", your selected treatment of \", input$my.treatment, \" and your previous PANSS scores, your expected PANSS score at the end of eight weeks is \", round(tail(fit_rint, n=1)), \" (95% prediction interval: \", round(tail(lwr_rint, n=1)), \", \", round(tail(upr_rint,n=1)), \").\")\n  })\n  output$tablestatement <- renderText({\n\n    if (input$numind == 6) {\n    } else {\n      paste0(\"Predictions for all weeks are given in the table below.\")\n    } \n    \n  })\n  output$my.regressiontable <- renderTable({\n    \n    if(input$my.treatment == \"none\") {\n      my.treatmentID = 0}\n    if(input$my.treatment == \"haloperidol\") {\n      my.treatmentID = 1}\n    if(input$my.treatment == \"risperidone (2mg)\") {\n      my.treatmentID = 2}\n    if(input$my.treatment == \"risperidone (6mg)\") {\n      my.treatmentID = 3}\n    if(input$my.treatment == \"risperidone (10mg)\") {\n      my.treatmentID = 4}\n    if(input$my.treatment == \"risperidone (16mg)\") {\n      my.treatmentID = 5}\n    \n    numset <- input$numind\n    indset <- c(input$ninput1, \n                input$ninput2, \n                input$ninput3, \n                input$ninput4, \n                input$ninput5,\n                input$ninput6)\n    inputset <- c()\n    for (i in 1:numset) {\n      inputset <- c(inputset, indset[i])\n    }\n    \n    n = 752\n    newrows<-data.frame(id=rep(n+1,input$numind))\n    newrows$onsetage<-rep(input$my.onsetage,input$numind)\n    newrows$treatment<-rep(my.treatmentID, input$numind)\n    newrows$time<-weeks[1:input$numind]\n    newrows$totpan<-inputset\n    \n    weekly.df.new<-as.data.frame(rbind(weekly.df, newrows))\n    \n    predictrows<-data.frame(id = rep(n+1,(7-numset)))\n    predictrows$onsetage<-rep(input$my.onsetage,(7-numset))\n    predictrows$treatment<-rep(my.treatmentID, (7-numset))\n    predictrows$time<-weeks[(numset+1):length(weeks)]\n    \n    panss.rint <- lmer(totpan ~ time + onsetage + treatment + (1 | id), data = weekly.df.new, REML = FALSE)\n    sigma_rint <- sigma.hat(panss.rint)$sigma$data\n    \n    last.row<-dim(coef(panss.rint)$id)[1]\n    coef_rint <- as.numeric(coef(panss.rint)$id[last.row,])\n    names(coef(panss.rint)$id)\n    \n    matrix_rint <- as.matrix(cbind(1, predictrows$time, predictrows$onsetage, predictrows$treatment))\n    \n    n.sims<-10000\n    sim_values_rint<-matrix(apply(matrix_rint%*%coef_rint, 1, rnorm, n=n.sims, sd=sigma_rint), nrow=n.sims, ncol=length(predictrows$time), byrow=FALSE)\n    fit_rint<-apply(sim_values_rint,2,mean) #mean\n    lwr_rint<-apply(sim_values_rint,2,quantile, p=0.025) #lower 2.5%\n    upr_rint<-apply(sim_values_rint,2,quantile, p=0.975) #upper 97.5%\n    \n    outputtable<-as.table(cbind(round(fit_rint),round(lwr_rint),round(upr_rint)))\n    for(i in 1:length(predictrows$time)){\n      rownames(outputtable)[i] <- paste0(\"Week \", predictrows$time[i])\n      \n      if (predictrows$time[i] == -1) {\n        rownames(outputtable)[i] = \"Week prior to treatment\"\n      } else if (predictrows$time[i] == 0) {\n        rownames(outputtable)[i] = \"Start of treatment\"\n      } else {\n        rownames(outputtable)[i] = paste0(\"Week \", predictrows$time[i], \" of treatment\")\n      }\n    }\n    colnames(outputtable)<-c(\"Mean Prediction\", \"Lower Bound\", \"Upper Bound\")\n    if (input$numind == 6) {\n    } else {\n      print(outputtable, row.names = FALSE)\n    }\n  })\n  \n  output$ninputs <- renderUI({\n    weeks <- c(-1,0,1,2,4,6,8)\n    numind <- as.integer(input$numind)\n    lapply(1:numind, function(i) {\n      sliderInput(inputId = paste0(\"ninput\", i), \n                  if (i == 1) {\n                    label = \"Week prior to treatment\"\n                  } else if (i == 2) {\n                    label = \"Week of start of treatment\"\n                  } else {\n                      label = paste0(\"Week \", weeks[i], \" of treatment\")\n                      }, min = 31, max = 161, value = 83, step = 1)\n    \n    \n  })\n})\n  \n  output$information.table <- renderTable({\n    study.length <- c(\"Have not started treatment\", \"Just started treatment\", \"1 week into treatment\", \"2 weeks into treatment\", \"4 weeks into treatment\", \"6 weeks into treatment\", \"8 weeks into treatment\")\n    #weeks <- c(\"-1\", \"-1, 0\", \"-1, 0, 1\", \"-1, 0, 1, 2\", \"-1, 0, 1, 2, 4\", \"-1, 0, 1, 2, 4, 6\", \"-1, 0, 1, 2, 4, 6, 8\")\n    available.data <- c(1,2,3,4,5,6,7)\n    info.table <- as.table(cbind(study.length, available.data)) #, weeks))\n    row.names(info.table) <- NULL\n    colnames(info.table) <- c(\"Where are you in your treatment regiment?\", \"Number of available PANSS scores to input\") #, \"Week number(s)\")\n    print(info.table, row.names = FALSE)\n    })\n  \n})",
    "created" : 1484795274635.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3911240861",
    "id" : "B04950AA",
    "lastKnownWriteTime" : 1461627357,
    "last_content_update" : 1461627357,
    "path" : "~/Documents/Sophomore Year 15-16/Data Viz/Final Project/MentalHealthFinalDraft/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}